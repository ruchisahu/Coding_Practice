
public class VowelsString {
	static boolean isVowel(char x) 
	{ 
	    x = Character.toLowerCase(x); 
	   
	    // Returns true if x is vowel 
	    return (x == 'a' || x == 'e'
	            || x == 'i' || x == 'o'
	            || x == 'u'); 
	} 
	   
	// Function to find the longest subsequence 
	// which contain all vowels 
	static String longestVowelSubsequence(String str) 
	{ 
	    String answer = ""; 
	   
	    // Length of the String 
	    int n = str.length(); 
	   
	    // Iterating through the String 
	    for (int i = 0; i < n; i++) { 
	   
	        // Checking if the character is a 
	        // vowel or not 
	        if (isVowel(str.charAt(i))) { 
	   
	            // If it is a vowel, then add it 
	            // to the final String 
	            answer += str.charAt(i); 
	        } 
	    }  
	    return answer; 
	} 
	
	//sol2
	static String longestVowelSubsequence1(String str) 
	{ 
		StringBuilder sb=new StringBuilder();
		int n = str.length()-1; 
		int i=0;
		while(n>=0) {
			char c=str.charAt(i)
		}
		return sb.toString();
	}
	   
	public static void main(String[] args) {
		 String str = "geeksforgeeks"; 
		    System.out.print(longestVowelSubsequence(str) 
		 +"\n"); 

	}

}
