import java.util.*;

public class AirCraftRoute
{
	public static List<PairInt> getOptimizedUtilize(int maxTravelDist, List<PairInt> forwardRouteList, List<PairInt> returnRouteList)
	{

		List<PairInt> result=new ArrayList<>();
		  int max=Integer.MIN_VALUE;
		  for(int i=0;i<forwardRouteList.size();i++){
			  for(int j=0;j<returnRouteList.size();j++){
				  int sum=forwardRouteList.get(i).second +returnRouteList.get(i).second;
				  if(sum<=maxTravelDist){
					  if(sum>max){
						  max=sum;
						  result=new ArrayList<>();
						  result.add(new PairInt(forwardRouteList.get(i).first, returnRouteList.get(j).first));
					  }else{
						 result.add(new PairInt(forwardRouteList.get(i).first, returnRouteList.get(j).first));
					  }
				   }
				}
			}
			return result;
	}
	
	

	public static void main(String[] args) {
		List<PairInt> forwardRouteList=new ArrayList<PairInt>();
		List<PairInt> returnRouteList=new ArrayList<PairInt>();
		forwardRouteList.add(new PairInt(1,2000));
		forwardRouteList.add(new PairInt(2,3000));
		forwardRouteList.add(new PairInt(3,4000));
		returnRouteList.add(new PairInt(1,2000));
		
		System.out.println(getOptimizedUtilize(7000,forwardRouteList,returnRouteList));

	}

}
