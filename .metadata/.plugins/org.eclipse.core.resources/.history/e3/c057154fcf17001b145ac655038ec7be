package Chap_8;

import java.util.Arrays;

import util.util;
//)(d(n+k))
public class RadixSort {
	private static void Sort(int[] array,int size) {
		int digit=countDigit(array);
		for(int i=0;i<digit;i++) {
			countingSort(array,i);
		}
		
	}

	public static void countingSort(int[] A, int k) {
		int[] C=new int[10];
		int[] B=new int[A.length];
		
		for(int i=0;i<C.length;i++)
			C[i]=0;
		
		for(int i=0;i<A.length;i++) {
			C[A[i]]=C[A[i]]+1;
		}
		for (int i = 1; i < C.length; i++) {
			C[i] += C[i - 1];
		}
		
		for(int j=A.length-1;j>=0;j--) {
			B[C[A[j]]-1]=A[j];
			C[A[j]]--;
		}
		
		
	}
	
	//
	void countingSort(int array[], int size, int place) {
	    int[] output = new int[size + 1];
	    int max = array[0];
	    for (int i = 1; i < size; i++) {
	      if (array[i] > max)
	        max = array[i];
	    }
	    int[] count = new int[max + 1];

	    for (int i = 0; i < max; ++i)
	      count[i] = 0;

	    // Calculate count of elements
	    for (int i = 0; i < size; i++)
	      count[(array[i] / place) % 10]++;

	    // Calculate cummulative count
	    for (int i = 1; i < 10; i++)
	      count[i] += count[i - 1];

	    // Place the elements in sorted order
	    for (int i = size - 1; i >= 0; i--) {
	      output[count[(array[i] / place) % 10] - 1] = array[i];
	      count[(array[i] / place) % 10]--;
	    }

	    for (int i = 0; i < size; i++)
	      array[i] = output[i];
	  }

	public int getdigit(int i, int d)
	{
	    while (d > 1) {
	        d--;
	        i/=10;
	    }
	 
	    return i%10;
	}

	private static int countDigit(int[] array) {
		int digit=0;
		for(int item:array) {
			int d=(int) Math.ceil(Math.log10(item));
			if(d>digit)
				digit=d;
		}
		return digit;
	}

	public static void main(String[] args) {
		System.out.println("\nRadix Sort test");
		int[] array = new int[5];
		util.fillWithRandomInts(array);
		int size=array.length;
		System.out.println(Arrays.toString(array));
		Sort(array,size);
		System.out.println(Arrays.toString(array));

	}

	

}
