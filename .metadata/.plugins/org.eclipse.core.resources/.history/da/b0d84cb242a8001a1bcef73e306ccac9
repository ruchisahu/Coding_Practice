/*
 You are given a list of non-negative integers, a1, a2, ..., an, and a target, S. Now you have 2 symbols + and -. For each integer, you should choose one from + and - as its new symbol. 
Find out how many ways to assign symbols to make sum of integers equal to target S. 
Example 1:
Input: nums is [1, 1, 1, 1, 1], S is 3. 
Output: 5
Explanation: 

-1+1+1+1+1 = 3
+1-1+1+1+1 = 3
+1+1-1+1+1 = 3
+1+1+1-1+1 = 3
+1+1+1+1-1 = 3

There are 5 ways to assign symbols to make the sum of nums be target 3.
 */
public class TargetSum494
{
public static int findTargetSumWays(int[] nums, int S)
{
	int n=nums.length;
	if(nums==null || nums.length==0)
	{
		return 0;
	}
	helper(nums,S,0,0,0);
	return 0;
        
    }

	private static int helper(int[] nums, int s, int sum,int count, int index) {
		
	if(index==nums.length)
	{
		if(s==count)
		{
			count++;
		}
		
		return count;
	}
	return helper(nums,s,sum+nums[index],count,index+1);
	
}

	public static void main(String[] args) {
		int[] num= {1, 1, 1, 1, 1};
		int S=3;
		System.out.println(findTargetSumWays(num,S));

	}

}
